plugins {
    id 'java'
    id 'idea'
    id 'xyz.wagyourtail.unimined' version '1.2.14'
}

group 'dev.rdh'
version '0.1'

base {
    archivesName = "fastnbt"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

idea {
    module {
        downloadSources = true
    }
}

sourceSets {
    fabric
    forge
}

repositories {
    mavenCentral()
}

configurations.all {
    resolutionStrategy {
        force "net.fabricmc:sponge-mixin:${project.mixin_version}"
    }
}

def accessWidenerPath = "src/main/resources/fastnbt.aw"

unimined.minecraft {
    version = project.minecraft_version

    mappings {
        intermediary()
        mojmap()
        parchment(minecraft_version, parchment_version)

        devFallbackNamespace "intermediary"
    }

    accessWidener {
        accessWidener(accessWidenerPath)
    }

    runs.off = true
    defaultRemapJar = false
}

unimined.minecraft(sourceSets.fabric) {
    combineWith(sourceSets.main)

    fabric {
        loader project.fabric_version
        accessWidener(accessWidenerPath)
    }

    runs.off = false
    defaultRemapJar = true
}

unimined.minecraft(sourceSets.forge) {
    combineWith(sourceSets.main)

    neoForge {
        loader project.forge_version
        mixinConfig "fastnbt.mixins.json"
        accessTransformer(aw2at(accessWidenerPath))
    }

    runs.off = false
    defaultRemapJar = true
}

dependencies {
    // we need this in main where it isn't by default
    implementation "net.fabricmc:sponge-mixin:${project.mixin_version}"
    implementation("io.github.llamalad7:mixinextras-common:0.3.5")

    fabricModImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}+${project.minecraft_version}"
}

tasks.jar {
    enabled = false
}

def replaceProperties = [
        "version": project.version,
        "minecraft_version": project.minecraft_version,
]

tasks.processFabricResources {
    inputs.properties replaceProperties

    filesMatching("fabric.mod.json") {
        expand replaceProperties
    }
}

tasks.processForgeResources {
    inputs.properties replaceProperties

    filesMatching("META-INF/mods.toml") {
        expand replaceProperties
    }
}